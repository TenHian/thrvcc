#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>

void assert(long expected, long actual, char *code)
{
	if (expected == actual) {
		printf("%s => %ld\n", code, actual);
	} else {
		printf("%s => %ld expected but got %d\n", code, expected,
		       actual);
		exit(1);
	}
}

// [74] Support for static func
static int static_fn() { return 5; }

// [115] Support for keyword 'extern'
int ext1 = 5;
int *ext2 = &ext1;

// [116] process with 'extern' in block aka segment
int ext3 = 7;
int ext_fn1(int x) { return x; }
int ext_fn2(int x) { return x; }

// [125] support for func return short
int false_fn() { return 512; }
int true_fn() { return 513; }
int char_fn() { return (2<<8)+3; }
int short_fn() { return (2<<16)+5; }

// [126] support for variadic function call
int add_all(int n, ...) {
	va_list ap;
	va_start(ap, n);
	
	int sum = 0;
	for (int i = 0; i < n; i++)
		sum += va_arg(ap, int);
	return sum;
}
